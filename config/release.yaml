apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: cd-system
---
apiVersion: v1
kind: Service
metadata:
  name: cd-webhook
  namespace: cd-system
  labels:
    cd.tmax.io/part-of: controller
spec:
  selector:
    control-plane: controller-manager
  ports:
    - name: webhook
      port: 24335
    - name: api
      port: 34335
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cd-webhook
  namespace: cd-system
  labels:
    cd.tmax.io/part-of: controller
spec:
  rules:
    - host: waiting.for.loadbalancer
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: cd-webhook
                port:
                  number: 24335
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cd-config
  namespace: cd-system
  labels:
    cd.tmax.io/part-of: controller
data:
  externalHostName: ""
  exposeMode: ""
  ingressClass: ""
  ingressHost: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cd-operator
  namespace: cd-system
  labels:
    control-plane: controller-manager
    cd.tmax.io/part-of: controller
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - command:
            - /controller
          image: tmaxcloudck/cd-operator:dev
          imagePullPolicy: Always
          name: manager
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /logs
              name: operator-log
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: operator-log
          hostPath:
            path: /var/log/cd-operator/logs
      terminationGracePeriodSeconds: 10
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cd-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
      - serviceaccounts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apiregistration.k8s.io
    resources:
      - apiservices
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cd.tmax.io
    resources:
      - applications
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - cd.tmax.io
    resources:
      - applications/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - cdapi.tmax.io
    resources:
      - applications/sync
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: cd-manager-role
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resourceNames:
      - extension-apiserver-authentication
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin # 권한 문제 때문에 임시 처리. 보안상 꼭 바뀌어야 함
subjects:
  - kind: ServiceAccount
    name: default
    namespace: cd-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cd-manager
  namespace: cd-system
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1.cdapi.tmax.io
spec:
  group: cdapi.tmax.io
  groupPriorityMinimum: 100
  service:
    name: cd-webhook
    namespace: cd-system
    port: 34335
  version: v1
  versionPriority: 100
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: applications.cd.tmax.io
spec:
  group: cd.tmax.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: Application is the Schema for the applications API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: ApplicationSpec defines the desired state of Application
              properties:
                destination:
                  description:
                    Destination is a reference to the target Kubernetes server
                    and namespace
                  properties:
                    name:
                      description:
                        Name specifies the target cluster's name. Do not
                        enter any value if you want to deploy in current context.
                      type: string
                    namespace:
                      description:
                        Namespace specifies the target namespace for the
                        application's resources. The namespace will only be set for
                        namespace-scoped resources that have not set a value for .metadata.namespace
                      type: string
                  type: object
                source:
                  description:
                    Source is a reference to the location of the application's
                    manifests or chart
                  properties:
                    helm:
                      description: Helm holds helm specific options
                      properties:
                        clonedRepoPath:
                          type: string
                        releaseName:
                          type: string
                      type: object
                    path:
                      description:
                        Path is a directory path within the Git repository,
                        and is only valid for applications sourced from Git.
                      type: string
                    repoURL:
                      description:
                        RepoURL is the URL to the repository (Git) that contains
                        the application manifests
                      type: string
                    targetRevision:
                      description:
                        TargetRevision defines the revision of the source
                        to sync the application to. In case of Git, this can be commit,
                        tag, or branch. If omitted, will equal to HEAD. In case of Helm,
                        this is a semver tag for the Chart's version.
                      type: string
                    token:
                      description:
                        Token is a token for accessing the remote git server.
                        It can be empty, if you don't want to register a webhook to
                        the git server
                      properties:
                        value:
                          description:
                            Value is un-encrypted plain string of git token,
                            not recommended
                          type: string
                        valueFrom:
                          description: ValueFrom refers secret. Recommended
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description:
                                    The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description:
                                    "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?"
                                  type: string
                                optional:
                                  description:
                                    Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                                - key
                              type: object
                          required:
                            - secretKeyRef
                          type: object
                      type: object
                    type:
                      description: Type specifies the type of the application's source
                      enum:
                        - PlainYAML
                        - Helm
                      type: string
                  required:
                    - repoURL
                    - type
                  type: object
                syncPolicy:
                  description: SyncPolicy controls when and how a sync will be performed
                  properties:
                    autosync:
                      description:
                        AutoSync will keep an application synced to the target
                        revision if it is set true
                      type: boolean
                    syncCheckPeriod:
                      description: SyncCheckPeriod is period to check sync in sec
                      format: int64
                      type: integer
                  type: object
              required:
                - destination
                - source
              type: object
            status:
              description: ApplicationStatus defines the observed state of Application
              properties:
                conditions:
                  description: Conditions of Application
                  items:
                    description:
                      "Condition contains details for one aspect of the current
                      state of this API Resource. --- This struct is intended for direct
                      use as an array at the field path .status.conditions.  For example,
                      type FooStatus struct{     // Represents the observations of a
                      foo's current state.     // Known .status.conditions.type are:
                      \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                      \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                      \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                      patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                      \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description:
                          lastTransitionTime is the last time the condition
                          transitioned from one status to another. This should be when
                          the underlying condition changed.  If that is not known, then
                          using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description:
                          message is a human readable message indicating
                          details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description:
                          observedGeneration represents the .metadata.generation
                          that the condition was set based upon. For instance, if .metadata.generation
                          is currently 12, but the .status.conditions[x].observedGeneration
                          is 9, the condition is out of date with respect to the current
                          state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description:
                          reason contains a programmatic identifier indicating
                          the reason for the condition's last transition. Producers
                          of specific condition types may define expected values and
                          meanings for this field, and whether the values are considered
                          a guaranteed API. The value should be a CamelCase string.
                          This field may not be empty.
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description:
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          --- Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be useful
                          (see .node.status.conditions), the ability to deconflict is
                          important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                secrets:
                  type: string
                sync:
                  description:
                    SyncStatus contains information about the application's
                    current sync status
                  properties:
                    status:
                      description: Status is the sync state of the comparison
                      type: string
                    timeCheck:
                      description: TimeCheck is time after last sync in second
                      format: int64
                      type: integer
                  type: object
              required:
                - conditions
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: deployresources.cd.tmax.io
spec:
  group: cd.tmax.io
  names:
    kind: DeployResource
    listKind: DeployResourceList
    plural: deployresources
    shortNames:
      - drs
    singular: deployresource
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          description: DeployResource is resource created by an application
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            application:
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: DeployResourceSpec is a spec of deployed application's resource
              properties:
                apiVersion:
                  type: string
                kind:
                  type: string
                name:
                  description: name kind namespace, status
                  type: string
                namespace:
                  type: string
              required:
                - apiVersion
                - kind
                - name
                - namespace
              type: object
          required:
            - application
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

