apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: cd-system
---
apiVersion: v1
kind: Service
metadata:
  name: cd-webhook
  namespace: cd-system
  labels:
    cd.tmax.io/part-of: controller
spec:
  selector:
    control-plane: controller-manager
  ports:
  - name: webhook
    port: 24335
  - name: api
    port: 34335
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cd-webhook
  namespace: cd-system
  labels:
    cd.tmax.io/part-of: controller
spec:
  rules:
    - host: waiting.for.loadbalancer
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: cd-webhook
                port:
                  number: 24335
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cd-config
  namespace: cd-system
  labels:
    cd.tmax.io/part-of: controller
data:
  externalHostName: ""
  ingressClass: ""
  ingressHost: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cd-operator
  namespace: cd-system
  labels:
    control-plane: controller-manager
    cd.tmax.io/part-of: controller
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - command:
        - /controller
        image: tmaxcloudck/cd-operator:latest
        imagePullPolicy: Always
        name: manager
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
          - mountPath: /logs
            name: operator-log
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
        - name: operator-log
          hostPath:
            path: /var/log/cd-operator/logs
      terminationGracePeriodSeconds: 10
---

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cd-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cd.tmax.io
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cd.tmax.io
  resources:
  - applications/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin # 권한 문제 때문에 임시 처리. 보안상 꼭 바뀌어야 함
subjects:
- kind: ServiceAccount
  name: default
  namespace: cd-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cd-manager
  namespace: cd-system
---

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: applications.cd.tmax.io
spec:
  group: cd.tmax.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Application is the Schema for the applications API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSpec defines the desired state of Application
            properties:
              destination:
                description: Destination is a reference to the target Kubernetes server
                  and namespace
                properties:
                  name:
                    description: Name is an alternate way of specifying the target
                      cluster by its symbolic name
                    type: string
                  namespace:
                    description: Namespace specifies the target namespace for the
                      application's resources. The namespace will only be set for
                      namespace-scoped resources that have not set a value for .metadata.namespace
                    type: string
                  server:
                    description: Server specifies the URL of the target cluster and
                      must be set to the Kubernetes control plane API
                    type: string
                type: object
              source:
                description: Source is a reference to the location of the application's
                  manifests or chart
                properties:
                  path:
                    description: Path is a directory path within the Git repository,
                      and is only valid for applications sourced from Git.
                    type: string
                  repoURL:
                    description: RepoURL is the URL to the repository (Git) that contains
                      the application manifests
                    type: string
                  targetRevision:
                    description: TargetRevision defines the revision of the source
                      to sync the application to. In case of Git, this can be commit,
                      tag, or branch. If omitted, will equal to HEAD. In case of Helm,
                      this is a semver tag for the Chart's version.
                    type: string
                required:
                - repoURL
                type: object
            required:
            - destination
            - source
            type: object
          status:
            description: ApplicationStatus defines the observed state of Application
            properties:
              conditions:
                description: Conditions of IntegrationConfig
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              secrets:
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: deployresources.cd.tmax.io
spec:
  group: cd.tmax.io
  names:
    kind: DeployResource
    listKind: DeployResourceList
    plural: deployresources
    shortNames:
    - drs
    singular: deployresource
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: DeployResource is resource created by an argocd application
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          application:
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeployResourceSpec is a spec of deployed application's resource
            properties:
              kind:
                type: string
              name:
                description: name kind namespace, status
                type: string
              namespace:
                type: string
            required:
            - kind
            - name
            - namespace
            type: object
        required:
        - application
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
